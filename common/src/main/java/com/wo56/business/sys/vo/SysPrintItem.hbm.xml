<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="com.wo56.business.sys.vo.SysPrintItem" table="sys_print_item">
        <id name="id" type="java.lang.Long">
            <column name="id" />
            <generator class="identity" />
        </id>
        <property name="configId" type="java.lang.Long">
            <column name="config_id" not-null="true">
                <comment>Sys_Print_Config主键</comment>
            </column>
        </property>
        <property name="itemType" type="java.lang.Integer">
            <column name="item_type" not-null="true">
                <comment>打印项类型。1：文本</comment>
            </column>
        </property>
        <property name="itemDesc" type="java.lang.String">
            <column name="item_desc" length="32" not-null="true">
                <comment>打印项描述</comment>
            </column>
        </property>
        <property name="objectKey" type="java.lang.String">
            <column name="object_key" length="32" not-null="true">
                <comment>js对象中的属性名</comment>
            </column>
        </property>
        <property name="specialObjectValue" type="java.lang.String">
            <column name="special_object_value" length="32">
                <comment>object_key为special_key值时，则取这个特殊值</comment>
            </column>
        </property>
        <property name="formatFunc" type="java.lang.String">
            <column name="format_func" length="64">
                <comment>格式化方法。通过object_key取出来的值可以通过这个方法格式化。</comment>
            </column>
        </property>
        <property name="posType" type="java.lang.Integer">
            <column name="pos_type" not-null="true">
                <comment>位置类型；1：固定位置；2：与某个object_key的值在x轴的相对位置（也就是与某个object_key的offset_top相同，offset根据object_key对应的值计算出来）；3：与某个object_value的值在y轴的相对位置；当为2、3时，根
                据offset_value和字体的个数和font_size计算。</comment>
            </column>
        </property>
        <property name="relObjectKey" type="java.lang.String">
            <column name="rel_object_key" length="32">
                <comment>相对于rel_object_key的位置，自关联此表的object_key</comment>
            </column>
        </property>
        <property name="offsetValue" type="java.lang.Double">
            <column name="offset_value" precision="22" scale="0">
                <comment>相对偏移值</comment>
            </column>
        </property>
        <property name="topOffset" type="java.lang.Double">
            <column name="top_offset" precision="22" scale="0">
                <comment>整页上边距，单位为毫米</comment>
            </column>
        </property>
        <property name="leftOffset" type="java.lang.Double">
            <column name="left_offset" precision="22" scale="0">
                <comment>整页左边距，单位为毫米</comment>
            </column>
        </property>
        <property name="itemWidth" type="java.lang.Double">
            <column name="item_width" precision="22" scale="0" not-null="true">
                <comment>打印项宽度</comment>
            </column>
        </property>
        <property name="itemHeight" type="java.lang.Double">
            <column name="item_height" precision="22" scale="0" not-null="true">
                <comment>打印项高度</comment>
            </column>
        </property>
        <property name="fontSize" type="java.lang.Integer">
            <column name="font_size">
                <comment>文本字体大小</comment>
            </column>
        </property>
        <property name="fontBold" type="java.lang.Integer">
            <column name="font_bold">
                <comment>文本是否粗体。1 : 粗体；其它为非粗体。</comment>
            </column>
        </property>
        <property name="state" type="java.lang.Integer">
            <column name="state" not-null="true">
                <comment>状态(1:有效; 其他:无效)</comment>
            </column>
        </property>
    </class>
</hibernate-mapping>
